{"version":3,"sources":["services/BMI.js","components/BMI/BMIResult.js","components/BMI/BMI.js","App.js","index.js"],"names":["create","newBMI","a","axios","post","response","data","BMIResult","result","bmi","className","health","BMI","useState","weight","setWeight","height","setHeight","calculator","setCalculator","setResult","calculate","event","preventDefault","parseInt","BMIService","console","log","onSubmit","value","type","onChange","target","required","id","name","defaultChecked","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"6QAGMA,EAAM,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACYC,IAAMC,KAHjB,WAG+BH,GADhC,cACLI,EADK,yBAEJA,EAASC,MAFL,2CAAH,sDAMG,GAAEN,U,eCcFO,EAnBG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACI,mCAEuB,QAAfA,EAAOC,IACL,sBAAKC,UAAU,mBAAf,UACE,4BAAIF,EAAOC,MACX,kCAAKD,EAAOG,OAAZ,UAEF,sBAAKD,UAAU,qBAAf,UACE,4BAAIF,EAAOC,MACX,mCAAMD,EAAOG,OAAb,cCkELC,EA3EH,WAER,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,UAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BN,qBAA5B,mBAAOL,EAAP,KAAeY,EAAf,KAEMC,EAAS,uCAAG,WAAOC,GAAP,iBAAApB,EAAA,6DACdoB,EAAMC,iBAEAtB,EAAS,CACXa,OAAQU,SAASV,GACjBE,OAAQQ,SAASR,GACjBE,WAAYA,GANF,kBAUaO,EAAWzB,OAAOC,GAV/B,OAUJI,EAVI,OAWVe,EAAUf,GACVY,EAAU,GACVF,EAAU,GAbA,kDAeVW,QAAQC,IAAI,oDAfF,0DAAH,sDA6Bf,OACI,sBAAKjB,UAAU,MAAf,UACI,uBAAMA,UAAU,WAAWkB,SAAUP,EAArC,UACI,yCACA,uBACAQ,MAAkB,IAAXf,EAAe,GAAKA,EAC3BgB,KAAK,OACLC,SAjBS,SAACT,GAClBA,EAAMC,iBACNR,EAAUO,EAAMU,OAAOH,QAgBfI,UAAQ,IAER,uBACA,yCACA,uBACAJ,MAAkB,IAAXb,EAAe,GAAKA,EAC3Bc,KAAK,OACLC,SApBS,SAACT,GAClBA,EAAMC,iBACNN,EAAUK,EAAMU,OAAOH,QAmBfI,UAAQ,IAER,uBACA,uBACA,sBAAKvB,UAAU,gBAAgBqB,SAAU,SAACT,GAAD,OAAWH,EAAcG,EAAMU,OAAOH,QAA/E,UACI,uBAAOC,KAAK,QAAQI,GAAG,SAASC,KAAK,QAAQN,MAAM,SAASO,gBAAc,IAC1E,uBAAOC,QAAQ,SAAf,sBACA,uBAAOP,KAAK,QAAQI,GAAG,KAAKC,KAAK,QAAQN,MAAM,OAC/C,uBAAOQ,QAAQ,KAAf,uBAAqC,uBACzC,0BAEA,wBAAQP,KAAK,SAAb,uBACA,mBAAGpB,UAAU,gBAAb,kEAGAF,GACQ,cAAC,EAAD,CAAWA,OAAQA,QC9D5B8B,EATH,WAEV,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e0172727.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = '/api/bmi'\r\n\r\nconst create = async newBMI => {\r\n    const response = await axios.post(baseUrl, newBMI)\r\n    return response.data\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default { create }","import React from \"react\"\r\n\r\nimport \"./bmi.css\"\r\n\r\nconst BMIResult = ({result}) => {\r\n    return (\r\n        <>\r\n            {\r\n                result.bmi === 'NaN' \r\n                ? <div className=\"bmi-result-error\">\r\n                    <p>{result.bmi}</p>\r\n                    <p>({result.health})</p>\r\n                </div>\r\n                : <div className=\"bmi-result-success\">\r\n                    <p>{result.bmi}</p>\r\n                    <p>( {result.health} )</p>\r\n                </div>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BMIResult","import React, { useState } from \"react\"\r\nimport BMIService from \"../../services/BMI\"\r\nimport BMIResult from \"./BMIResult\"\r\n\r\nimport \"./bmi.css\"\r\n\r\nconst BMI = () => {\r\n\r\n    const [weight, setWeight] = useState(0)\r\n    const [height, setHeight] = useState(0)\r\n    const [calculator, setCalculator] = useState('metric')\r\n    const [result, setResult] = useState()\r\n\r\n    const calculate = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const newBMI = {\r\n            weight: parseInt(weight),\r\n            height: parseInt(height),\r\n            calculator: calculator\r\n        }\r\n\r\n        try {\r\n            const response = await BMIService.create(newBMI)\r\n            setResult(response)\r\n            setHeight(0)\r\n            setWeight(0)\r\n        } catch {\r\n            console.log('There seems to be an error contacting the server')\r\n        }\r\n    }\r\n\r\n    const handleWeight = (event) => {\r\n        event.preventDefault()\r\n        setWeight(event.target.value)\r\n    }\r\n\r\n    const handleHeight = (event) => {\r\n        event.preventDefault()\r\n        setHeight(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"bmi\">\r\n            <form className=\"bmi-form\" onSubmit={calculate}>\r\n                <p>Weight: </p>\r\n                <input \r\n                value={weight === 0 ? '' : weight}\r\n                type=\"text\"\r\n                onChange={handleWeight}\r\n                required\r\n                />\r\n                <br />\r\n                <p>Height: </p>\r\n                <input \r\n                value={height === 0 ? '' : height}\r\n                type=\"text\"\r\n                onChange={handleHeight}\r\n                required\r\n                />\r\n                <br />\r\n                <br />\r\n                <div className=\"bmi-form-unit\" onChange={(event) => setCalculator(event.target.value)}>\r\n                    <input type=\"radio\" id=\"metric\" name=\"units\" value=\"metric\" defaultChecked/>\r\n                    <label htmlFor=\"metric\">(kg, cm)</label>\r\n                    <input type=\"radio\" id=\"us\" name=\"units\" value=\"us\"/>\r\n                    <label htmlFor=\"us\">(lbs, in)</label><br />\r\n                <br />\r\n                </div> \r\n                <button type=\"submit\">Calculate</button>\r\n                <p className=\"bmi-form-note\">Make sure the input corresponds to the right unit</p>\r\n            </form>\r\n            {\r\n                result && (\r\n                        <BMIResult result={result} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BMI","import React from \"react\"\nimport BMI from \"./components/BMI/BMI\"\n\nconst App = () => {\n\n  return (\n    <div>\n      <BMI />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}